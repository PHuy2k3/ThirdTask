{"ast":null,"code":"var _import$meta;\n// src/lib/api.js\nconst ENV_BASE = ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || typeof process !== \"undefined\" && process.env.REACT_APP_API_BASE || \"http://localhost:5088\"; // đổi sang https://localhost:7060 nếu bạn chạy profile https\n\nfunction normalizeBase(raw) {\n  const s = (raw || \"\").trim().replace(/\\/+$/, \"\");\n  try {\n    const u = new URL(s);\n    if (u.hostname === \"localhost\" && u.port === \"5088\") u.protocol = \"http:\"; // auto-fix nhầm https cho 5088\n    return u.toString().replace(/\\/+$/, \"\");\n  } catch {\n    return s;\n  }\n}\nfunction headersToObject(headers) {\n  const obj = {};\n  try {\n    for (const [k, v] of headers.entries()) obj[k] = v;\n  } catch {}\n  return obj;\n}\nasync function parseBody(res) {\n  const text = await res.text();\n  if (!text) return null;\n  try {\n    return JSON.parse(text);\n  } catch {\n    return text;\n  }\n}\nfunction buildAxiosError({\n  message,\n  code,\n  config,\n  request,\n  response\n}) {\n  const err = new Error(message);\n  err.name = \"AxiosError\";\n  err.code = code; // 'ERR_NETWORK', 'ECONNABORTED', ...\n  err.config = config; // { url, method, headers, body }\n  err.request = request; // { url }\n  err.response = response; // { status, statusText, headers, data }\n  err.isAxiosError = true;\n  err.toJSON = () => ({\n    name: err.name,\n    message: err.message,\n    code: err.code,\n    status: response === null || response === void 0 ? void 0 : response.status,\n    data: response === null || response === void 0 ? void 0 : response.data\n  });\n  return err;\n}\n\n/* ===== Logger toàn cục: log ERROR & SUCCESS ===== */\nlet apiLogger = evt => {\n  if (evt.type === \"error\") {\n    const {\n      method,\n      url,\n      status,\n      message,\n      code,\n      data\n    } = evt;\n    console.error(`[API ERR] ${method} ${url}${status ? ` ${status}` : \"\"}`, message, {\n      code,\n      data\n    });\n  } else if (evt.type === \"success\") {\n    const {\n      method,\n      url,\n      status,\n      duration,\n      hint\n    } = evt;\n    const tail = hint ? ` • ${hint}` : \"\";\n    console.log(`[API OK]  ${method} ${url} ${status} (${duration}ms)${tail}`);\n  }\n};\n/** Gắn logger tuỳ biến (ví dụ: thêm toast) */\nexport function setApiLogger(fn) {\n  if (typeof fn === \"function\") apiLogger = fn;\n}\n\n/**\r\n * http(baseUrl, path, init?)\r\n *  - init.timeout (ms) hỗ trợ timeout kiểu axios (mặc định 15000)\r\n *  - init.silent = true để KHÔNG log (cả ok & error) cho call này\r\n *  - throw Axios-like error khi lỗi\r\n */\nexport const http = async (baseUrl, path, init = {}) => {\n  const root = normalizeBase(baseUrl || ENV_BASE);\n  const url = `${root}${path}`;\n  const method = (init.method || \"GET\").toUpperCase();\n  const {\n    timeout,\n    silent,\n    ...fetchInit\n  } = init || {};\n  const timeoutMs = typeof timeout === \"number\" ? timeout : 15000;\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), timeoutMs);\n  const t0 = typeof performance !== \"undefined\" && performance.now ? performance.now() : Date.now();\n  let res;\n  try {\n    res = await fetch(url, {\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(fetchInit.headers || {})\n      },\n      signal: controller.signal,\n      ...fetchInit\n    });\n    clearTimeout(id);\n  } catch (e) {\n    clearTimeout(id);\n    const isAbort = (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\";\n    const err = buildAxiosError({\n      message: isAbort ? `timeout of ${timeoutMs}ms exceeded` : \"Network Error\",\n      code: isAbort ? \"ECONNABORTED\" : \"ERR_NETWORK\",\n      config: {\n        url,\n        method,\n        ...fetchInit\n      },\n      request: {\n        url\n      },\n      response: undefined\n    });\n    if (!silent) apiLogger({\n      type: \"error\",\n      method,\n      url,\n      status: undefined,\n      message: err.message,\n      code: err.code,\n      data: undefined\n    });\n    throw err;\n  }\n  if (!res.ok) {\n    const data = await parseBody(res);\n    const msg = data && (data.message || data.error || data.title || data.detail) || `${res.status} ${res.statusText}` || \"Request failed\";\n    const err = buildAxiosError({\n      message: msg,\n      code: undefined,\n      config: {\n        url,\n        method,\n        ...fetchInit\n      },\n      request: {\n        url\n      },\n      response: {\n        status: res.status,\n        statusText: res.statusText,\n        headers: headersToObject(res.headers),\n        data\n      }\n    });\n    if (!silent) apiLogger({\n      type: \"error\",\n      method,\n      url,\n      status: res.status,\n      message: msg,\n      code: err.code,\n      data\n    });\n    throw err;\n  }\n\n  // 204 No Content\n  if (res.status === 204) {\n    const t1 = typeof performance !== \"undefined\" && performance.now ? performance.now() : Date.now();\n    if (!silent) apiLogger({\n      type: \"success\",\n      method,\n      url,\n      status: res.status,\n      duration: Math.round(t1 - t0),\n      hint: \"no content\"\n    });\n    return null;\n  }\n  const data = await parseBody(res);\n  const t1 = typeof performance !== \"undefined\" && performance.now ? performance.now() : Date.now();\n\n  // Gợi ý nhỏ (không log payload): số item nếu có\n  const hint = Array.isArray(data) ? `items:${data.length}` : data && typeof data === \"object\" && Array.isArray(data.items) ? `items:${data.items.length}` : undefined;\n  if (!silent) apiLogger({\n    type: \"success\",\n    method,\n    url,\n    status: res.status,\n    duration: Math.round(t1 - t0),\n    hint\n  });\n  return data;\n};\nexport const buildQuery = obj => {\n  const q = Object.entries(obj !== null && obj !== void 0 ? obj : {}).filter(([, v]) => v !== undefined && v !== null && v !== \"\").map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join(\"&\");\n  return q ? `?${q}` : \"\";\n};\n\n// Helper lấy message “kiểu Axios”\nexport function getAxiosMessage(err, fallback = \"Request failed\") {\n  var _err$response, _err$response$data, _err$response2, _err$response2$data, _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n  if (!err) return fallback;\n  return (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || (err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || (err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.title) || (err === null || err === void 0 ? void 0 : (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.detail) || (err === null || err === void 0 ? void 0 : err.message) || fallback;\n}\n\n// Test nhanh kết nối\nexport const testConnection = async baseUrl => {\n  const root = normalizeBase(baseUrl || ENV_BASE);\n  const candidates = [\"/api/health\", \"/swagger/v1/swagger.json\", \"/api/categories?page=1&size=1\"];\n  for (const p of candidates) {\n    try {\n      const r = await fetch(`${root}${p}`, {\n        mode: \"cors\"\n      });\n      if (r.ok) return {\n        ok: true,\n        url: `${root}${p}`\n      };\n    } catch {}\n  }\n  return {\n    ok: false,\n    baseUrl: root,\n    error: \"Cannot reach API\"\n  };\n};","map":{"version":3,"names":["ENV_BASE","_import$meta","import","meta","env","VITE_API_BASE","process","REACT_APP_API_BASE","normalizeBase","raw","s","trim","replace","u","URL","hostname","port","protocol","toString","headersToObject","headers","obj","k","v","entries","parseBody","res","text","JSON","parse","buildAxiosError","message","code","config","request","response","err","Error","name","isAxiosError","toJSON","status","data","apiLogger","evt","type","method","url","console","error","duration","hint","tail","log","setApiLogger","fn","http","baseUrl","path","init","root","toUpperCase","timeout","silent","fetchInit","timeoutMs","controller","AbortController","id","setTimeout","abort","t0","performance","now","Date","fetch","mode","signal","clearTimeout","e","isAbort","undefined","ok","msg","title","detail","statusText","t1","Math","round","Array","isArray","length","items","buildQuery","q","Object","filter","map","encodeURIComponent","join","getAxiosMessage","fallback","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","testConnection","candidates","p","r"],"sources":["D:/CMC_Task/third-task/fe/category/src/lib/api.js"],"sourcesContent":["// src/lib/api.js\r\nconst ENV_BASE =\r\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\r\n  (typeof process !== \"undefined\" && process.env.REACT_APP_API_BASE) ||\r\n  \"http://localhost:5088\"; // đổi sang https://localhost:7060 nếu bạn chạy profile https\r\n\r\nfunction normalizeBase(raw) {\r\n  const s = (raw || \"\").trim().replace(/\\/+$/, \"\");\r\n  try {\r\n    const u = new URL(s);\r\n    if (u.hostname === \"localhost\" && u.port === \"5088\") u.protocol = \"http:\"; // auto-fix nhầm https cho 5088\r\n    return u.toString().replace(/\\/+$/, \"\");\r\n  } catch {\r\n    return s;\r\n  }\r\n}\r\n\r\nfunction headersToObject(headers) {\r\n  const obj = {};\r\n  try { for (const [k, v] of headers.entries()) obj[k] = v; } catch {}\r\n  return obj;\r\n}\r\n\r\nasync function parseBody(res) {\r\n  const text = await res.text();\r\n  if (!text) return null;\r\n  try { return JSON.parse(text); } catch { return text; }\r\n}\r\n\r\nfunction buildAxiosError({ message, code, config, request, response }) {\r\n  const err = new Error(message);\r\n  err.name = \"AxiosError\";\r\n  err.code = code;                 // 'ERR_NETWORK', 'ECONNABORTED', ...\r\n  err.config = config;             // { url, method, headers, body }\r\n  err.request = request;           // { url }\r\n  err.response = response;         // { status, statusText, headers, data }\r\n  err.isAxiosError = true;\r\n  err.toJSON = () => ({\r\n    name: err.name,\r\n    message: err.message,\r\n    code: err.code,\r\n    status: response?.status,\r\n    data: response?.data,\r\n  });\r\n  return err;\r\n}\r\n\r\n/* ===== Logger toàn cục: log ERROR & SUCCESS ===== */\r\nlet apiLogger = (evt) => {\r\n  if (evt.type === \"error\") {\r\n    const { method, url, status, message, code, data } = evt;\r\n    console.error(`[API ERR] ${method} ${url}${status ? ` ${status}` : \"\"}`, message, { code, data });\r\n  } else if (evt.type === \"success\") {\r\n    const { method, url, status, duration, hint } = evt;\r\n    const tail = hint ? ` • ${hint}` : \"\";\r\n    console.log(`[API OK]  ${method} ${url} ${status} (${duration}ms)${tail}`);\r\n  }\r\n};\r\n/** Gắn logger tuỳ biến (ví dụ: thêm toast) */\r\nexport function setApiLogger(fn) {\r\n  if (typeof fn === \"function\") apiLogger = fn;\r\n}\r\n\r\n/**\r\n * http(baseUrl, path, init?)\r\n *  - init.timeout (ms) hỗ trợ timeout kiểu axios (mặc định 15000)\r\n *  - init.silent = true để KHÔNG log (cả ok & error) cho call này\r\n *  - throw Axios-like error khi lỗi\r\n */\r\nexport const http = async (baseUrl, path, init = {}) => {\r\n  const root = normalizeBase(baseUrl || ENV_BASE);\r\n  const url = `${root}${path}`;\r\n\r\n  const method = (init.method || \"GET\").toUpperCase();\r\n  const { timeout, silent, ...fetchInit } = init || {};\r\n  const timeoutMs = typeof timeout === \"number\" ? timeout : 15000;\r\n\r\n  const controller = new AbortController();\r\n  const id = setTimeout(() => controller.abort(), timeoutMs);\r\n  const t0 = (typeof performance !== \"undefined\" && performance.now) ? performance.now() : Date.now();\r\n\r\n  let res;\r\n  try {\r\n    res = await fetch(url, {\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\", ...(fetchInit.headers || {}) },\r\n      signal: controller.signal,\r\n      ...fetchInit,\r\n    });\r\n    clearTimeout(id);\r\n  } catch (e) {\r\n    clearTimeout(id);\r\n    const isAbort = e?.name === \"AbortError\";\r\n    const err = buildAxiosError({\r\n      message: isAbort ? `timeout of ${timeoutMs}ms exceeded` : \"Network Error\",\r\n      code: isAbort ? \"ECONNABORTED\" : \"ERR_NETWORK\",\r\n      config: { url, method, ...fetchInit },\r\n      request: { url },\r\n      response: undefined,\r\n    });\r\n    if (!silent) apiLogger({ type: \"error\", method, url, status: undefined, message: err.message, code: err.code, data: undefined });\r\n    throw err;\r\n  }\r\n\r\n  if (!res.ok) {\r\n    const data = await parseBody(res);\r\n    const msg =\r\n      (data && (data.message || data.error || data.title || data.detail)) ||\r\n      `${res.status} ${res.statusText}` ||\r\n      \"Request failed\";\r\n    const err = buildAxiosError({\r\n      message: msg,\r\n      code: undefined,\r\n      config: { url, method, ...fetchInit },\r\n      request: { url },\r\n      response: {\r\n        status: res.status,\r\n        statusText: res.statusText,\r\n        headers: headersToObject(res.headers),\r\n        data,\r\n      },\r\n    });\r\n    if (!silent) apiLogger({ type: \"error\", method, url, status: res.status, message: msg, code: err.code, data });\r\n    throw err;\r\n  }\r\n\r\n  // 204 No Content\r\n  if (res.status === 204) {\r\n    const t1 = (typeof performance !== \"undefined\" && performance.now) ? performance.now() : Date.now();\r\n    if (!silent) apiLogger({ type: \"success\", method, url, status: res.status, duration: Math.round(t1 - t0), hint: \"no content\" });\r\n    return null;\r\n  }\r\n\r\n  const data = await parseBody(res);\r\n  const t1 = (typeof performance !== \"undefined\" && performance.now) ? performance.now() : Date.now();\r\n\r\n  // Gợi ý nhỏ (không log payload): số item nếu có\r\n  const hint =\r\n    Array.isArray(data) ? `items:${data.length}` :\r\n    (data && typeof data === \"object\" && Array.isArray(data.items)) ? `items:${data.items.length}` :\r\n    undefined;\r\n\r\n  if (!silent) apiLogger({ type: \"success\", method, url, status: res.status, duration: Math.round(t1 - t0), hint });\r\n\r\n  return data;\r\n};\r\n\r\nexport const buildQuery = (obj) => {\r\n  const q = Object.entries(obj ?? {})\r\n    .filter(([, v]) => v !== undefined && v !== null && v !== \"\")\r\n    .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\r\n    .join(\"&\");\r\n  return q ? `?${q}` : \"\";\r\n};\r\n\r\n// Helper lấy message “kiểu Axios”\r\nexport function getAxiosMessage(err, fallback = \"Request failed\") {\r\n  if (!err) return fallback;\r\n  return (\r\n    err?.response?.data?.message ||\r\n    err?.response?.data?.error ||\r\n    err?.response?.data?.title ||\r\n    err?.response?.data?.detail ||\r\n    err?.message ||\r\n    fallback\r\n  );\r\n}\r\n\r\n// Test nhanh kết nối\r\nexport const testConnection = async (baseUrl) => {\r\n  const root = normalizeBase(baseUrl || ENV_BASE);\r\n  const candidates = [\"/api/health\", \"/swagger/v1/swagger.json\", \"/api/categories?page=1&size=1\"];\r\n  for (const p of candidates) {\r\n    try {\r\n      const r = await fetch(`${root}${p}`, { mode: \"cors\" });\r\n      if (r.ok) return { ok: true, url: `${root}${p}` };\r\n    } catch {}\r\n  }\r\n  return { ok: false, baseUrl: root, error: \"Cannot reach API\" };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}