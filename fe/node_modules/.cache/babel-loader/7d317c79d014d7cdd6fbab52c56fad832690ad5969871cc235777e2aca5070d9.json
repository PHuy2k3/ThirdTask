{"ast":null,"code":"var _import$meta;\n// src/lib/api.js\nconst ENV_BASE = ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || typeof process !== \"undefined\" && process.env.REACT_APP_API_BASE || \"http://localhost:5088\"; // MẶC ĐỊNH HTTP 5088 cho DEV\n\nexport const http = async (baseUrl, path, init = {}) => {\n  // Ưu tiên baseUrl truyền vào; fallback ENV_BASE. Không tự đổi sang https.\n  const root = baseUrl || ENV_BASE;\n  const url = `${root}${path}`;\n  console.log(\"[API] ->\", url); // debug: xem FE đang gọi đâu\n\n  const res = await fetch(url, {\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(init.headers || {})\n    },\n    ...init\n  });\n  if (!res.ok) {\n    const text = await res.text();\n    throw new Error(text || res.statusText);\n  }\n  return res.status === 204 ? null : res.json();\n};\nexport const buildQuery = obj => {\n  const q = Object.entries(obj).filter(([, v]) => v !== undefined && v !== null && v !== \"\").map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join(\"&\");\n  return q ? `?${q}` : \"\";\n};","map":{"version":3,"names":["ENV_BASE","_import$meta","import","meta","env","VITE_API_BASE","process","REACT_APP_API_BASE","http","baseUrl","path","init","root","url","console","log","res","fetch","mode","headers","ok","text","Error","statusText","status","json","buildQuery","obj","q","Object","entries","filter","v","undefined","map","k","encodeURIComponent","join"],"sources":["D:/CMC_Task/third-task/fe/category/src/lib/api.js"],"sourcesContent":["// src/lib/api.js\r\nconst ENV_BASE =\r\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\r\n  (typeof process !== \"undefined\" && process.env.REACT_APP_API_BASE) ||\r\n  \"http://localhost:5088\"; // MẶC ĐỊNH HTTP 5088 cho DEV\r\n\r\nexport const http = async (baseUrl, path, init = {}) => {\r\n  // Ưu tiên baseUrl truyền vào; fallback ENV_BASE. Không tự đổi sang https.\r\n  const root = baseUrl || ENV_BASE;\r\n  const url = `${root}${path}`;\r\n  console.log(\"[API] ->\", url); // debug: xem FE đang gọi đâu\r\n\r\n  const res = await fetch(url, {\r\n    mode: \"cors\",\r\n    headers: { \"Content-Type\": \"application/json\", ...(init.headers || {}) },\r\n    ...init,\r\n  });\r\n  if (!res.ok) {\r\n    const text = await res.text();\r\n    throw new Error(text || res.statusText);\r\n  }\r\n  return res.status === 204 ? null : res.json();\r\n};\r\n\r\nexport const buildQuery = (obj) => {\r\n  const q = Object.entries(obj)\r\n    .filter(([, v]) => v !== undefined && v !== null && v !== \"\")\r\n    .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\r\n    .join(\"&\");\r\n  return q ? `?${q}` : \"\";\r\n};\r\n"],"mappings":";AAAA;AACA,MAAMA,QAAQ,GACX,EAAAC,YAAA,GAAAC,MAAM,CAACC,IAAI,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,GAAG,KAAIF,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,aAAa,IACjD,OAAOC,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACF,GAAG,CAACG,kBAAmB,IAClE,uBAAuB,CAAC,CAAC;;AAE3B,OAAO,MAAMC,IAAI,GAAG,MAAAA,CAAOC,OAAO,EAAEC,IAAI,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EACtD;EACA,MAAMC,IAAI,GAAGH,OAAO,IAAIT,QAAQ;EAChC,MAAMa,GAAG,GAAG,GAAGD,IAAI,GAAGF,IAAI,EAAE;EAC5BI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC,CAAC,CAAC;;EAE9B,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;IAC3BK,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,IAAIR,IAAI,CAACQ,OAAO,IAAI,CAAC,CAAC;IAAE,CAAC;IACxE,GAAGR;EACL,CAAC,CAAC;EACF,IAAI,CAACK,GAAG,CAACI,EAAE,EAAE;IACX,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACK,IAAI,CAAC,CAAC;IAC7B,MAAM,IAAIC,KAAK,CAACD,IAAI,IAAIL,GAAG,CAACO,UAAU,CAAC;EACzC;EACA,OAAOP,GAAG,CAACQ,MAAM,KAAK,GAAG,GAAG,IAAI,GAAGR,GAAG,CAACS,IAAI,CAAC,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,GAAG,IAAK;EACjC,MAAMC,CAAC,GAAGC,MAAM,CAACC,OAAO,CAACH,GAAG,CAAC,CAC1BI,MAAM,CAAC,CAAC,GAAGC,CAAC,CAAC,KAAKA,CAAC,KAAKC,SAAS,IAAID,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAK,EAAE,CAAC,CAC5DE,GAAG,CAAC,CAAC,CAACC,CAAC,EAAEH,CAAC,CAAC,KAAK,GAAGI,kBAAkB,CAACD,CAAC,CAAC,IAAIC,kBAAkB,CAACJ,CAAC,CAAC,EAAE,CAAC,CACpEK,IAAI,CAAC,GAAG,CAAC;EACZ,OAAOT,CAAC,GAAG,IAAIA,CAAC,EAAE,GAAG,EAAE;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}