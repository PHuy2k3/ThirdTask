{"ast":null,"code":"var _import$meta;\n// src/lib/api.js\n// Base URL mặc định (đổi sang https://localhost:7060 nếu bạn chạy profile https)\nconst ENV_BASE = ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || typeof process !== \"undefined\" && process.env.REACT_APP_API_BASE || \"http://localhost:5088\";\n\n/* -------------------- Utils -------------------- */\nexport function normalizeBase(raw) {\n  const s = (raw || \"\").trim().replace(/\\/+$/, \"\");\n  try {\n    const u = new URL(s);\n    if (u.hostname === \"localhost\" && u.port === \"5088\") u.protocol = \"http:\";\n    return u.toString().replace(/\\/+$/, \"\");\n  } catch {\n    return s;\n  }\n}\nfunction headersToObject(headers) {\n  const obj = {};\n  try {\n    for (const [k, v] of headers.entries()) obj[k] = v;\n  } catch {}\n  return obj;\n}\nasync function parseBody(res) {\n  const text = await res.text();\n  if (!text) return null;\n  try {\n    return JSON.parse(text);\n  } catch {\n    return text;\n  }\n}\n\n/* -------------------- Axios-like structures -------------------- */\nfunction buildAxiosError({\n  message,\n  code,\n  config,\n  request,\n  response\n}) {\n  const err = new Error(message);\n  err.name = \"AxiosError\";\n  err.code = code;\n  err.config = config;\n  err.request = request;\n  err.response = response;\n  err.isAxiosError = true;\n  err.toJSON = () => ({\n    name: err.name,\n    message: err.message,\n    code: err.code,\n    status: response === null || response === void 0 ? void 0 : response.status,\n    data: response === null || response === void 0 ? void 0 : response.data\n  });\n  return err;\n}\nfunction buildAxiosResponse({\n  data,\n  status,\n  statusText,\n  headers,\n  config,\n  request,\n  duration\n}) {\n  return {\n    data,\n    status,\n    statusText,\n    headers,\n    config,\n    // { url, method, headers, body… }\n    request,\n    // { url }\n    duration,\n    // (thêm) thời gian ms để debug\n    isAxiosResponse: true\n  };\n}\n\n/* -------------------- Logger toàn cục -------------------- */\nlet apiLogger = evt => {\n  if (evt.type === \"error\") {\n    const {\n      method,\n      url,\n      status,\n      message,\n      code,\n      data\n    } = evt;\n    console.error(`[API ERR] ${method} ${url}${status ? ` ${status}` : \"\"}`, message, {\n      code,\n      data\n    });\n  } else if (evt.type === \"success\") {\n    console.log(\"[AXIOS RES]\", evt.response);\n  }\n};\nexport function setApiLogger(fn) {\n  if (typeof fn === \"function\") apiLogger = fn;\n}\n\n/* -------------------- Public helpers -------------------- */\nexport function getAxiosMessage(err, fallback = \"Request failed\") {\n  var _err$response, _err$response$data, _err$response2, _err$response2$data, _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n  if (!err) return fallback;\n  return (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || (err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || (err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.title) || (err === null || err === void 0 ? void 0 : (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.detail) || (err === null || err === void 0 ? void 0 : err.message) || fallback;\n}\n\n/**\r\n * http(baseUrl, path, init?)\r\n *  - init.timeout (ms) : timeout kiểu axios (mặc định 15000)\r\n *  - init.silent = true: không log (ok & error) cho request này\r\n *  - Throw Axios-like error khi lỗi\r\n */\nexport const http = async (baseUrl, path, init = {}) => {\n  const root = normalizeBase(baseUrl || ENV_BASE);\n  const url = `${root}${path}`;\n  const method = (init.method || \"GET\").toUpperCase();\n  const {\n    timeout,\n    silent,\n    ...fetchInit\n  } = init || {};\n  const timeoutMs = typeof timeout === \"number\" ? timeout : 15000;\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), timeoutMs);\n  const now = typeof performance !== \"undefined\" && performance.now ? () => performance.now() : () => Date.now();\n  const t0 = now();\n  let res;\n  try {\n    res = await fetch(url, {\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(fetchInit.headers || {})\n      },\n      signal: controller.signal,\n      ...fetchInit\n    });\n    clearTimeout(id);\n  } catch (e) {\n    clearTimeout(id);\n    const isAbort = (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\";\n    const err = buildAxiosError({\n      message: isAbort ? `timeout of ${timeoutMs}ms exceeded` : \"Network Error\",\n      code: isAbort ? \"ECONNABORTED\" : \"ERR_NETWORK\",\n      config: {\n        url,\n        method,\n        ...fetchInit\n      },\n      request: {\n        url\n      },\n      response: undefined\n    });\n    if (!silent) apiLogger({\n      type: \"error\",\n      method,\n      url,\n      status: undefined,\n      message: err.message,\n      code: err.code,\n      data: undefined\n    });\n    throw err;\n  }\n  if (!res.ok) {\n    const data = await parseBody(res);\n    const msg = data && (data.message || data.error || data.title || data.detail) || `${res.status} ${res.statusText}` || \"Request failed\";\n    const err = buildAxiosError({\n      message: msg,\n      code: undefined,\n      config: {\n        url,\n        method,\n        ...fetchInit\n      },\n      request: {\n        url\n      },\n      response: {\n        status: res.status,\n        statusText: res.statusText,\n        headers: headersToObject(res.headers),\n        data\n      }\n    });\n    if (!silent) apiLogger({\n      type: \"error\",\n      method,\n      url,\n      status: res.status,\n      message: msg,\n      code: err.code,\n      data\n    });\n    throw err;\n  }\n\n  // Thành công\n  const data = await parseBody(res);\n  const duration = Math.round(now() - t0);\n\n  // Tạo Axios-like response để log\n  const axiosRes = buildAxiosResponse({\n    data,\n    status: res.status,\n    statusText: res.statusText,\n    headers: headersToObject(res.headers),\n    config: {\n      url,\n      method,\n      ...fetchInit\n    },\n    request: {\n      url\n    },\n    duration\n  });\n  if (!silent) apiLogger({\n    type: \"success\",\n    method,\n    url,\n    status: res.status,\n    duration,\n    response: axiosRes\n  });\n  return data; // vẫn trả data như cũ để code hiện tại không phải đổi\n};\nexport const buildQuery = obj => {\n  const q = Object.entries(obj !== null && obj !== void 0 ? obj : {}).filter(([, v]) => v !== undefined && v !== null && v !== \"\").map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join(\"&\");\n  return q ? `?${q}` : \"\";\n};\n\n// Test nhanh kết nối\nexport const testConnection = async baseUrl => {\n  const root = normalizeBase(baseUrl || ENV_BASE);\n  const candidates = [\"/api/health\", \"/swagger/v1/swagger.json\", \"/api/categories?page=1&size=1\"];\n  for (const p of candidates) {\n    try {\n      const r = await fetch(`${root}${p}`, {\n        mode: \"cors\"\n      });\n      if (r.ok) return {\n        ok: true,\n        url: `${root}${p}`\n      };\n    } catch {}\n  }\n  return {\n    ok: false,\n    baseUrl: root,\n    error: \"Cannot reach API\"\n  };\n};","map":{"version":3,"names":["ENV_BASE","_import$meta","import","meta","env","VITE_API_BASE","process","REACT_APP_API_BASE","normalizeBase","raw","s","trim","replace","u","URL","hostname","port","protocol","toString","headersToObject","headers","obj","k","v","entries","parseBody","res","text","JSON","parse","buildAxiosError","message","code","config","request","response","err","Error","name","isAxiosError","toJSON","status","data","buildAxiosResponse","statusText","duration","isAxiosResponse","apiLogger","evt","type","method","url","console","error","log","setApiLogger","fn","getAxiosMessage","fallback","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","title","detail","http","baseUrl","path","init","root","toUpperCase","timeout","silent","fetchInit","timeoutMs","controller","AbortController","id","setTimeout","abort","now","performance","Date","t0","fetch","mode","signal","clearTimeout","e","isAbort","undefined","ok","msg","Math","round","axiosRes","buildQuery","q","Object","filter","map","encodeURIComponent","join","testConnection","candidates","p","r"],"sources":["D:/CMC_Task/third-task/fe/category/src/lib/api.js"],"sourcesContent":["// src/lib/api.js\r\n// Base URL mặc định (đổi sang https://localhost:7060 nếu bạn chạy profile https)\r\nconst ENV_BASE =\r\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\r\n  (typeof process !== \"undefined\" && process.env.REACT_APP_API_BASE) ||\r\n  \"http://localhost:5088\";\r\n\r\n/* -------------------- Utils -------------------- */\r\nexport function normalizeBase(raw) {\r\n  const s = (raw || \"\").trim().replace(/\\/+$/, \"\");\r\n  try {\r\n    const u = new URL(s);\r\n    if (u.hostname === \"localhost\" && u.port === \"5088\") u.protocol = \"http:\";\r\n    return u.toString().replace(/\\/+$/, \"\");\r\n  } catch {\r\n    return s;\r\n  }\r\n}\r\n\r\nfunction headersToObject(headers) {\r\n  const obj = {};\r\n  try {\r\n    for (const [k, v] of headers.entries()) obj[k] = v;\r\n  } catch {}\r\n  return obj;\r\n}\r\n\r\nasync function parseBody(res) {\r\n  const text = await res.text();\r\n  if (!text) return null;\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch {\r\n    return text;\r\n  }\r\n}\r\n\r\n/* -------------------- Axios-like structures -------------------- */\r\nfunction buildAxiosError({ message, code, config, request, response }) {\r\n  const err = new Error(message);\r\n  err.name = \"AxiosError\";\r\n  err.code = code;               \r\n  err.config = config;            \r\n  err.request = request;           \r\n  err.response = response;        \r\n  err.isAxiosError = true;\r\n  err.toJSON = () => ({\r\n    name: err.name,\r\n    message: err.message,\r\n    code: err.code,\r\n    status: response?.status,\r\n    data: response?.data,\r\n  });\r\n  return err;\r\n}\r\n\r\nfunction buildAxiosResponse({ data, status, statusText, headers, config, request, duration }) {\r\n  return {\r\n    data,\r\n    status,\r\n    statusText,\r\n    headers,\r\n    config,      // { url, method, headers, body… }\r\n    request,     // { url }\r\n    duration,    // (thêm) thời gian ms để debug\r\n    isAxiosResponse: true\r\n  };\r\n}\r\n\r\n/* -------------------- Logger toàn cục -------------------- */\r\nlet apiLogger = (evt) => {\r\n  if (evt.type === \"error\") {\r\n    const { method, url, status, message, code, data } = evt;\r\n    console.error(`[API ERR] ${method} ${url}${status ? ` ${status}` : \"\"}`, message, { code, data });\r\n  } else if (evt.type === \"success\") {\r\n    console.log(\"[AXIOS RES]\", evt.response);\r\n  }\r\n};\r\nexport function setApiLogger(fn) {\r\n  if (typeof fn === \"function\") apiLogger = fn;\r\n}\r\n\r\n/* -------------------- Public helpers -------------------- */\r\nexport function getAxiosMessage(err, fallback = \"Request failed\") {\r\n  if (!err) return fallback;\r\n  return (\r\n    err?.response?.data?.message ||\r\n    err?.response?.data?.error ||\r\n    err?.response?.data?.title ||\r\n    err?.response?.data?.detail ||\r\n    err?.message ||\r\n    fallback\r\n  );\r\n}\r\n\r\n/**\r\n * http(baseUrl, path, init?)\r\n *  - init.timeout (ms) : timeout kiểu axios (mặc định 15000)\r\n *  - init.silent = true: không log (ok & error) cho request này\r\n *  - Throw Axios-like error khi lỗi\r\n */\r\nexport const http = async (baseUrl, path, init = {}) => {\r\n  const root = normalizeBase(baseUrl || ENV_BASE);\r\n  const url = `${root}${path}`;\r\n\r\n  const method = (init.method || \"GET\").toUpperCase();\r\n  const { timeout, silent, ...fetchInit } = init || {};\r\n  const timeoutMs = typeof timeout === \"number\" ? timeout : 15000;\r\n\r\n  const controller = new AbortController();\r\n  const id = setTimeout(() => controller.abort(), timeoutMs);\r\n\r\n  const now = (typeof performance !== \"undefined\" && performance.now) ? () => performance.now() : () => Date.now();\r\n  const t0 = now();\r\n\r\n  let res;\r\n  try {\r\n    res = await fetch(url, {\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\", ...(fetchInit.headers || {}) },\r\n      signal: controller.signal,\r\n      ...fetchInit,\r\n    });\r\n    clearTimeout(id);\r\n  } catch (e) {\r\n    clearTimeout(id);\r\n    const isAbort = e?.name === \"AbortError\";\r\n    const err = buildAxiosError({\r\n      message: isAbort ? `timeout of ${timeoutMs}ms exceeded` : \"Network Error\",\r\n      code: isAbort ? \"ECONNABORTED\" : \"ERR_NETWORK\",\r\n      config: { url, method, ...fetchInit },\r\n      request: { url },\r\n      response: undefined,\r\n    });\r\n    if (!silent) apiLogger({ type: \"error\", method, url, status: undefined, message: err.message, code: err.code, data: undefined });\r\n    throw err;\r\n  }\r\n\r\n  if (!res.ok) {\r\n    const data = await parseBody(res);\r\n    const msg =\r\n      (data && (data.message || data.error || data.title || data.detail)) ||\r\n      `${res.status} ${res.statusText}` ||\r\n      \"Request failed\";\r\n    const err = buildAxiosError({\r\n      message: msg,\r\n      code: undefined,\r\n      config: { url, method, ...fetchInit },\r\n      request: { url },\r\n      response: {\r\n        status: res.status,\r\n        statusText: res.statusText,\r\n        headers: headersToObject(res.headers),\r\n        data,\r\n      },\r\n    });\r\n    if (!silent) apiLogger({ type: \"error\", method, url, status: res.status, message: msg, code: err.code, data });\r\n    throw err;\r\n  }\r\n\r\n  // Thành công\r\n  const data = await parseBody(res);\r\n  const duration = Math.round(now() - t0);\r\n\r\n  // Tạo Axios-like response để log\r\n  const axiosRes = buildAxiosResponse({\r\n    data,\r\n    status: res.status,\r\n    statusText: res.statusText,\r\n    headers: headersToObject(res.headers),\r\n    config: { url, method, ...fetchInit },\r\n    request: { url },\r\n    duration\r\n  });\r\n\r\n  if (!silent) apiLogger({ type: \"success\", method, url, status: res.status, duration, response: axiosRes });\r\n  return data; // vẫn trả data như cũ để code hiện tại không phải đổi\r\n};\r\n\r\nexport const buildQuery = (obj) => {\r\n  const q = Object.entries(obj ?? {})\r\n    .filter(([, v]) => v !== undefined && v !== null && v !== \"\")\r\n    .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\r\n    .join(\"&\");\r\n  return q ? `?${q}` : \"\";\r\n};\r\n\r\n// Test nhanh kết nối\r\nexport const testConnection = async (baseUrl) => {\r\n  const root = normalizeBase(baseUrl || ENV_BASE);\r\n  const candidates = [\"/api/health\", \"/swagger/v1/swagger.json\", \"/api/categories?page=1&size=1\"];\r\n  for (const p of candidates) {\r\n    try {\r\n      const r = await fetch(`${root}${p}`, { mode: \"cors\" });\r\n      if (r.ok) return { ok: true, url: `${root}${p}` };\r\n    } catch {}\r\n  }\r\n  return { ok: false, baseUrl: root, error: \"Cannot reach API\" };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}