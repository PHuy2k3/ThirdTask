{"ast":null,"code":"var _import$meta;\n// src/lib/api.js\nimport axios from \"axios\";\n\n// Base URL mặc định (đổi sang https://localhost:7060 nếu chạy profile https)\nconst ENV_BASE = ((_import$meta = import.meta) === null || _import$meta === void 0 ? void 0 : _import$meta.env) && import.meta.env.VITE_API_BASE || typeof process !== \"undefined\" && process.env.REACT_APP_API_BASE || \"http://localhost:5088\";\n\n/* -------------------- Utils -------------------- */\nexport function normalizeBase(raw) {\n  const s = (raw || \"\").trim().replace(/\\/+$/, \"\");\n  try {\n    const u = new URL(s || ENV_BASE);\n    // Cổng 5088 là HTTP -> ép về http nếu ai đó set nhầm https\n    if (u.hostname === \"localhost\" && u.port === \"5088\") u.protocol = \"http:\";\n    return u.toString().replace(/\\/+$/, \"\");\n  } catch {\n    return (s || ENV_BASE).replace(/\\/+$/, \"\");\n  }\n}\nexport function getAxiosMessage(err, fallback = \"Request failed\") {\n  var _err$response, _err$response$data, _err$response2, _err$response2$data, _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n  if (!err) return fallback;\n  return (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || (err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || (err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.title) || (err === null || err === void 0 ? void 0 : (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.detail) || (err === null || err === void 0 ? void 0 : err.message) || fallback;\n}\n\n// (tuỳ chọn) nếu vẫn cần build query thủ công ở đâu đó\nexport const buildQuery = obj => {\n  const q = Object.entries(obj !== null && obj !== void 0 ? obj : {}).filter(([, v]) => v !== undefined && v !== null && v !== \"\").map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join(\"&\");\n  return q ? `?${q}` : \"\";\n};\n\n/* -------------------- Logger -------------------- */\nlet apiLogger = evt => {\n  if (evt.type === \"error\") {\n    const {\n      method,\n      url,\n      status,\n      message,\n      code,\n      data\n    } = evt;\n    console.error(`[API ERR] ${method} ${url}${status ? ` ${status}` : \"\"}`, message, {\n      code,\n      data\n    });\n  } else if (evt.type === \"success\") {\n    const {\n      status,\n      url,\n      duration\n    } = evt;\n    console.log(`[API OK] ${status} ${url} (${duration}ms)`);\n  } else if (evt.type === \"request\") {\n    const {\n      method,\n      url,\n      params\n    } = evt;\n    console.log(`[API REQ] ${method} ${url}`, params || \"\");\n  }\n};\nexport function setApiLogger(fn) {\n  if (typeof fn === \"function\") apiLogger = fn;\n}\n\n/* -------------------- Core -------------------- */\n// Ép path bắt đầu bằng /api/ để khỏi gọi nhầm root \"/\"\nfunction ensureApiPath(path) {\n  if (!/^\\/api\\//.test(path)) {\n    throw new Error(`Path must start with /api/: ${path}`);\n  }\n  return path;\n}\n\n/**\r\n * Tạo axios client dùng chung.\r\n * @param {string} baseUrl\r\n * @param {{timeout?: number, log?: boolean}} options\r\n */\nexport function createApi(baseUrl, options = {}) {\n  var _options$timeout, _options$log;\n  const base = normalizeBase(baseUrl || ENV_BASE);\n  const instance = axios.create({\n    baseURL: base,\n    timeout: (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : 15000,\n    withCredentials: false,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const enableLog = (_options$log = options.log) !== null && _options$log !== void 0 ? _options$log : typeof window !== \"undefined\" && process.env.NODE_ENV !== \"production\";\n  if (enableLog) {\n    instance.interceptors.request.use(config => {\n      var _performance, _performance$now;\n      const method = (config.method || \"get\").toUpperCase();\n      const url = (config.baseURL || \"\") + (config.url || \"\");\n      apiLogger({\n        type: \"request\",\n        method,\n        url,\n        params: config.params\n      });\n      // gắn timestamp để tính duration\n      config.metadata = {\n        start: ((_performance = performance) === null || _performance === void 0 ? void 0 : (_performance$now = _performance.now) === null || _performance$now === void 0 ? void 0 : _performance$now.call(_performance)) || Date.now()\n      };\n      return config;\n    });\n    instance.interceptors.response.use(res => {\n      var _res$config$metadata$, _res$config, _res$config$metadata, _performance2, _performance2$now;\n      const start = (_res$config$metadata$ = (_res$config = res.config) === null || _res$config === void 0 ? void 0 : (_res$config$metadata = _res$config.metadata) === null || _res$config$metadata === void 0 ? void 0 : _res$config$metadata.start) !== null && _res$config$metadata$ !== void 0 ? _res$config$metadata$ : Date.now();\n      const duration = Math.round((((_performance2 = performance) === null || _performance2 === void 0 ? void 0 : (_performance2$now = _performance2.now) === null || _performance2$now === void 0 ? void 0 : _performance2$now.call(_performance2)) || Date.now()) - start);\n      const url = (res.config.baseURL || \"\") + (res.config.url || \"\");\n      apiLogger({\n        type: \"success\",\n        status: res.status,\n        url,\n        duration\n      });\n      return res;\n    }, err => {\n      var _err$response5, _err$response6;\n      const cfg = err.config || {};\n      const url = (cfg.baseURL || \"\") + (cfg.url || \"\");\n      const method = (cfg.method || \"get\").toUpperCase();\n      const status = (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.status;\n      apiLogger({\n        type: \"error\",\n        method,\n        url,\n        status,\n        message: getAxiosMessage(err),\n        code: err.code,\n        data: (_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.data\n      });\n      return Promise.reject(err);\n    });\n  }\n\n  // Các wrapper ép /api/\n  return {\n    /** axios instance gốc nếu cần tuỳ biến thêm */\n    raw: instance,\n    get: (path, config) => instance.get(ensureApiPath(path), config),\n    post: (path, data, config) => instance.post(ensureApiPath(path), data, config),\n    put: (path, data, config) => instance.put(ensureApiPath(path), data, config),\n    delete: (path, config) => instance.delete(ensureApiPath(path), config)\n  };\n}\n\n/* -------------------- Health check -------------------- */\nexport async function testConnection(baseUrl) {\n  const api = createApi(baseUrl, {\n    log: false\n  });\n  const candidates = [\"/api/health\", \"/swagger/v1/swagger.json\", \"/api/categories\"];\n  for (const p of candidates) {\n    try {\n      const r = await api.get(p);\n      if ((r === null || r === void 0 ? void 0 : r.status) >= 200 && (r === null || r === void 0 ? void 0 : r.status) < 500) {\n        return {\n          ok: true,\n          url: api.raw.defaults.baseURL + p\n        };\n      }\n    } catch {}\n  }\n  return {\n    ok: false,\n    baseUrl: api.raw.defaults.baseURL,\n    error: \"Cannot reach API\"\n  };\n}","map":{"version":3,"names":["axios","ENV_BASE","_import$meta","import","meta","env","VITE_API_BASE","process","REACT_APP_API_BASE","normalizeBase","raw","s","trim","replace","u","URL","hostname","port","protocol","toString","getAxiosMessage","err","fallback","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","response","data","message","error","title","detail","buildQuery","obj","q","Object","entries","filter","v","undefined","map","k","encodeURIComponent","join","apiLogger","evt","type","method","url","status","code","console","duration","log","params","setApiLogger","fn","ensureApiPath","path","test","Error","createApi","baseUrl","options","_options$timeout","_options$log","base","instance","create","baseURL","timeout","withCredentials","headers","enableLog","window","NODE_ENV","interceptors","request","use","config","_performance","_performance$now","toUpperCase","metadata","start","performance","now","call","Date","res","_res$config$metadata$","_res$config","_res$config$metadata","_performance2","_performance2$now","Math","round","_err$response5","_err$response6","cfg","Promise","reject","get","post","put","delete","testConnection","api","candidates","p","r","ok","defaults"],"sources":["D:/CMC_Task/third-task/fe/category/src/lib/api.js"],"sourcesContent":["// src/lib/api.js\r\nimport axios from \"axios\";\r\n\r\n// Base URL mặc định (đổi sang https://localhost:7060 nếu chạy profile https)\r\nconst ENV_BASE =\r\n  (import.meta?.env && import.meta.env.VITE_API_BASE) ||\r\n  (typeof process !== \"undefined\" && process.env.REACT_APP_API_BASE) ||\r\n  \"http://localhost:5088\";\r\n\r\n/* -------------------- Utils -------------------- */\r\nexport function normalizeBase(raw) {\r\n  const s = (raw || \"\").trim().replace(/\\/+$/, \"\");\r\n  try {\r\n    const u = new URL(s || ENV_BASE);\r\n    // Cổng 5088 là HTTP -> ép về http nếu ai đó set nhầm https\r\n    if (u.hostname === \"localhost\" && u.port === \"5088\") u.protocol = \"http:\";\r\n    return u.toString().replace(/\\/+$/, \"\");\r\n  } catch {\r\n    return (s || ENV_BASE).replace(/\\/+$/, \"\");\r\n  }\r\n}\r\n\r\nexport function getAxiosMessage(err, fallback = \"Request failed\") {\r\n  if (!err) return fallback;\r\n  return (\r\n    err?.response?.data?.message ||\r\n    err?.response?.data?.error ||\r\n    err?.response?.data?.title ||\r\n    err?.response?.data?.detail ||\r\n    err?.message ||\r\n    fallback\r\n  );\r\n}\r\n\r\n// (tuỳ chọn) nếu vẫn cần build query thủ công ở đâu đó\r\nexport const buildQuery = (obj) => {\r\n  const q = Object.entries(obj ?? {})\r\n    .filter(([, v]) => v !== undefined && v !== null && v !== \"\")\r\n    .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\r\n    .join(\"&\");\r\n  return q ? `?${q}` : \"\";\r\n};\r\n\r\n/* -------------------- Logger -------------------- */\r\nlet apiLogger = (evt) => {\r\n  if (evt.type === \"error\") {\r\n    const { method, url, status, message, code, data } = evt;\r\n    console.error(`[API ERR] ${method} ${url}${status ? ` ${status}` : \"\"}`, message, { code, data });\r\n  } else if (evt.type === \"success\") {\r\n    const { status, url, duration } = evt;\r\n    console.log(`[API OK] ${status} ${url} (${duration}ms)`);\r\n  } else if (evt.type === \"request\") {\r\n    const { method, url, params } = evt;\r\n    console.log(`[API REQ] ${method} ${url}`, params || \"\");\r\n  }\r\n};\r\nexport function setApiLogger(fn) {\r\n  if (typeof fn === \"function\") apiLogger = fn;\r\n}\r\n\r\n/* -------------------- Core -------------------- */\r\n// Ép path bắt đầu bằng /api/ để khỏi gọi nhầm root \"/\"\r\nfunction ensureApiPath(path) {\r\n  if (!/^\\/api\\//.test(path)) {\r\n    throw new Error(`Path must start with /api/: ${path}`);\r\n  }\r\n  return path;\r\n}\r\n\r\n/**\r\n * Tạo axios client dùng chung.\r\n * @param {string} baseUrl\r\n * @param {{timeout?: number, log?: boolean}} options\r\n */\r\nexport function createApi(baseUrl, options = {}) {\r\n  const base = normalizeBase(baseUrl || ENV_BASE);\r\n  const instance = axios.create({\r\n    baseURL: base,\r\n    timeout: options.timeout ?? 15000,\r\n    withCredentials: false,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n\r\n  const enableLog =\r\n    options.log ?? (typeof window !== \"undefined\" && process.env.NODE_ENV !== \"production\");\r\n\r\n  if (enableLog) {\r\n    instance.interceptors.request.use((config) => {\r\n      const method = (config.method || \"get\").toUpperCase();\r\n      const url = (config.baseURL || \"\") + (config.url || \"\");\r\n      apiLogger({ type: \"request\", method, url, params: config.params });\r\n      // gắn timestamp để tính duration\r\n      config.metadata = { start: (performance?.now?.() || Date.now()) };\r\n      return config;\r\n    });\r\n\r\n    instance.interceptors.response.use(\r\n      (res) => {\r\n        const start = res.config?.metadata?.start ?? Date.now();\r\n        const duration = Math.round((performance?.now?.() || Date.now()) - start);\r\n        const url = (res.config.baseURL || \"\") + (res.config.url || \"\");\r\n        apiLogger({ type: \"success\", status: res.status, url, duration });\r\n        return res;\r\n      },\r\n      (err) => {\r\n        const cfg = err.config || {};\r\n        const url = (cfg.baseURL || \"\") + (cfg.url || \"\");\r\n        const method = (cfg.method || \"get\").toUpperCase();\r\n        const status = err.response?.status;\r\n        apiLogger({\r\n          type: \"error\",\r\n          method,\r\n          url,\r\n          status,\r\n          message: getAxiosMessage(err),\r\n          code: err.code,\r\n          data: err.response?.data,\r\n        });\r\n        return Promise.reject(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Các wrapper ép /api/\r\n  return {\r\n    /** axios instance gốc nếu cần tuỳ biến thêm */\r\n    raw: instance,\r\n    get: (path, config) => instance.get(ensureApiPath(path), config),\r\n    post: (path, data, config) => instance.post(ensureApiPath(path), data, config),\r\n    put: (path, data, config) => instance.put(ensureApiPath(path), data, config),\r\n    delete: (path, config) => instance.delete(ensureApiPath(path), config),\r\n  };\r\n}\r\n\r\n/* -------------------- Health check -------------------- */\r\nexport async function testConnection(baseUrl) {\r\n  const api = createApi(baseUrl, { log: false });\r\n  const candidates = [\"/api/health\", \"/swagger/v1/swagger.json\", \"/api/categories\"];\r\n  for (const p of candidates) {\r\n    try {\r\n      const r = await api.get(p);\r\n      if (r?.status >= 200 && r?.status < 500) {\r\n        return { ok: true, url: api.raw.defaults.baseURL + p };\r\n      }\r\n    } catch {}\r\n  }\r\n  return { ok: false, baseUrl: api.raw.defaults.baseURL, error: \"Cannot reach API\" };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}